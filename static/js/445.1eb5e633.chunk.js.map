{"version":3,"file":"static/js/445.1eb5e633.chunk.js","mappings":"ySAyBe,SAASA,IACtB,MAAMC,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,IAAYC,EAAAA,KACtBC,EAAQC,IAAaC,EAAAA,EAAAA,WAAS,IAC9BC,EAAgBC,IAAqBF,EAAAA,EAAAA,WAAS,GA4BrD,OAtBAG,EAAAA,EAAAA,YAAU,KACR,IACEV,GAASW,EAAAA,EAAAA,OACNC,SACAC,OAAOC,IACNC,QAAQD,MAAM,2BAA4BA,EAAM,IAEjDE,SAAQ,KACPP,GAAkB,EAAM,GAE9B,CAAE,MAAOK,GAAQ,IAChB,CAACd,KAEJU,EAAAA,EAAAA,YAAU,KACRJ,EAAUJ,EAASe,OAAS,EAAE,GAC7B,CAACf,KAQFgB,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,CAIGZ,GACCa,EAAAA,EAAAA,KAACC,EAAAA,EAAM,KAEPD,EAAAA,EAAAA,KAACE,EAAAA,GAAY,CAAAH,UACXF,EAAAA,EAAAA,MAACM,EAAAA,GAAU,CAACC,KAAMpB,EAAOe,SAAA,EACvBC,EAAAA,EAAAA,KAACK,EAAAA,GAAS,CAACC,QAASA,IAAMrB,GAAWD,GAAQe,SAC1Cf,GAASgB,EAAAA,EAAAA,KAACO,EAAAA,GAAc,KAAMP,EAAAA,EAAAA,KAACQ,EAAAA,GAAa,OAE/CR,EAAAA,EAAAA,KAACS,EAAAA,GAAM,CAAAV,SACJf,IACCa,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EACEC,EAAAA,EAAAA,KAACU,EAAAA,GAAU,CAAAX,SAAC,eACZC,EAAAA,EAAAA,KAACW,EAAAA,EAAU,IACU,IAApB9B,EAASe,SACRC,EAAAA,EAAAA,MAACe,EAAAA,GAAc,CAAAb,SAAA,EACbC,EAAAA,EAAAA,KAACa,EAAAA,GAAU,CAAAd,SAAC,cACZC,EAAAA,EAAAA,KAACc,EAAAA,EAAM,KACPd,EAAAA,EAAAA,KAACe,EAAAA,EAAY,kBAS7Bf,EAAAA,EAAAA,KAACgB,EAAAA,GAAc,MAGrB,C","sources":["pages/Contacts/Contacts.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\nimport Filter from \"../../components/Filter/Filter\";\nimport FormSubmit from \"../../components/FormSubmit/FormSubmit\";\nimport ContactsList from \"../../components/ContactsList/ContactsList\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { selectContacts } from \"../../redux/selectors\";\nimport { ToastContainer } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport Loader from \"../../components/Loader/Loader\";\nimport { fetchContacts } from \"../../redux/operations\";\nimport {\n  AppDiv,\n  AppTitleH1,\n  AppTitleH2,\n  AppContactsDiv,\n  AppContainer,\n  AppWrapper,\n} from \"../../components/App.styled\";\nimport {\n  AppButton,\n  AppButtonOpen,\n  AppButtonClose,\n} from \"../../components/AppButton/AppButton\";\n// import DrawerAppBar from \"../../components/HeaderNavigation/HeaderNavigation\";\n\nexport default function Contacts() {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n  const [isOpen, setIsOpen] = useState(false);\n  const [initialLoading, setInitialLoading] = useState(true);\n  // const [isDarkTheme, setIsDarkTheme] = useState(() => {\n  //   const savedTheme = localStorage.getItem(\"theme\");\n  //   return savedTheme === \"light\" ? false : true;\n  // });\n\n  useEffect(() => {\n    try {\n      dispatch(fetchContacts())\n        .unwrap()\n        .catch((error) => {\n          console.error(\"Error fetching contacts:\", error);\n        })\n        .finally(() => {\n          setInitialLoading(false);\n        });\n    } catch (error) {}\n  }, [dispatch]);\n\n  useEffect(() => {\n    setIsOpen(contacts.length > 0);\n  }, [contacts]);\n\n  // const toggleTheme = () => {\n  //   setIsDarkTheme((prevIsDarkTheme) => !prevIsDarkTheme);\n  //   localStorage.setItem(\"theme\", isDarkTheme ? \"light\" : \"dark\");\n  // };\n\n  return (\n    <>\n      {/* <header>\n        <DrawerAppBar toggleTheme={toggleTheme} isDarkTheme={isDarkTheme} />\n      </header> */}\n      {initialLoading ? (\n        <Loader />\n      ) : (\n        <AppContainer>\n          <AppWrapper open={isOpen}>\n            <AppButton onClick={() => setIsOpen(!isOpen)}>\n              {isOpen ? <AppButtonClose /> : <AppButtonOpen />}\n            </AppButton>\n            <AppDiv>\n              {isOpen && (\n                <>\n                  <AppTitleH1>Phonebook</AppTitleH1>\n                  <FormSubmit />\n                  {contacts.length !== 0 && (\n                    <AppContactsDiv>\n                      <AppTitleH2>Contacts</AppTitleH2>\n                      <Filter />\n                      <ContactsList />\n                    </AppContactsDiv>\n                  )}\n                </>\n              )}\n            </AppDiv>\n          </AppWrapper>\n        </AppContainer>\n      )}\n      <ToastContainer />\n    </>\n  );\n}\n"],"names":["Contacts","dispatch","useDispatch","contacts","useSelector","selectContacts","isOpen","setIsOpen","useState","initialLoading","setInitialLoading","useEffect","fetchContacts","unwrap","catch","error","console","finally","length","_jsxs","_Fragment","children","_jsx","Loader","AppContainer","AppWrapper","open","AppButton","onClick","AppButtonClose","AppButtonOpen","AppDiv","AppTitleH1","FormSubmit","AppContactsDiv","AppTitleH2","Filter","ContactsList","ToastContainer"],"sourceRoot":""}