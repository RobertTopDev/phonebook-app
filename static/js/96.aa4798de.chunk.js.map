{"version":3,"file":"static/js/96.aa4798de.chunk.js","mappings":"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","sources":["pages/SignUp/SignUp.js"],"sourcesContent":["import * as React from \"react\";\nimport Avatar from \"@mui/material/Avatar\";\nimport Button from \"@mui/material/Button\";\nimport CssBaseline from \"@mui/material/CssBaseline\";\nimport TextField from \"@mui/material/TextField\";\nimport FormControlLabel from \"@mui/material/FormControlLabel\";\nimport Checkbox from \"@mui/material/Checkbox\";\nimport Link from \"@mui/material/Link\";\nimport Grid from \"@mui/material/Grid\";\nimport Box from \"@mui/material/Box\";\nimport LockOutlinedIcon from \"@mui/icons-material/LockOutlined\";\nimport Typography from \"@mui/material/Typography\";\nimport Container from \"@mui/material/Container\";\nimport { createTheme, ThemeProvider } from \"@mui/material/styles\";\nimport { useDispatch } from \"react-redux\";\nimport { register } from \"../../redux/auth/operations\";\n\nfunction Copyright(props) {\n  return (\n    <Typography\n      variant=\"body2\"\n      color=\"text.secondary\"\n      align=\"center\"\n      {...props}\n    >\n      {\"Copyright Â© \"}\n      <Link\n        color=\"inherit\"\n        href=\"https://alexandrbig1.github.io/goit-react-hw-08-phonebook/\"\n      >\n        PhoneBook\n      </Link>{\" \"}\n      {new Date().getFullYear()}\n      {\".\"}\n    </Typography>\n  );\n}\n\n// TODO remove, this demo shouldn't need to reset the theme.\n\nconst defaultTheme = createTheme();\n\nexport default function SignUp() {\n  const dispatch = useDispatch();\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    const form = e.currentTarget;\n    console.log(form.elements.name.value);\n    console.log(form.elements.email.value);\n    console.log(form.elements.password.value);\n    dispatch(\n      register({\n        name: form.elements.name.value,\n        email: form.elements.email.value,\n        password: form.elements.password.value,\n      })\n    );\n    form.reset();\n    // const data = new FormData(event.currentTarget);\n    // console.log({\n    //   email: data.get(\"email\"),\n    //   password: data.get(\"password\"),\n    // });\n  };\n\n  return (\n    <ThemeProvider theme={defaultTheme}>\n      <Container component=\"main\" maxWidth=\"xs\">\n        <CssBaseline />\n        <Box\n          sx={{\n            marginTop: 8,\n            display: \"flex\",\n            flexDirection: \"column\",\n            alignItems: \"center\",\n          }}\n        >\n          <Avatar sx={{ m: 1, bgcolor: \"secondary.main\" }}>\n            <LockOutlinedIcon />\n          </Avatar>\n          <Typography component=\"h1\" variant=\"h5\">\n            Sign up\n          </Typography>\n          <Box\n            component=\"form\"\n            noValidate\n            onSubmit={handleSubmit}\n            sx={{ mt: 3 }}\n          >\n            <Grid container spacing={2}>\n              <Grid item xs={12}>\n                <TextField\n                  autoComplete=\"given-name\"\n                  name=\"name\"\n                  required\n                  fullWidth\n                  id=\"name\"\n                  label=\"Full Name\"\n                  autoFocus\n                />\n              </Grid>\n              {/* <Grid item xs={12} sm={6}>\n                <TextField\n                  required\n                  fullWidth\n                  id=\"lastName\"\n                  label=\"Last Name\"\n                  name=\"lastName\"\n                  autoComplete=\"family-name\"\n                />\n              </Grid> */}\n              <Grid item xs={12}>\n                <TextField\n                  required\n                  fullWidth\n                  id=\"email\"\n                  label=\"Email Address\"\n                  name=\"email\"\n                  autoComplete=\"email\"\n                />\n              </Grid>\n              <Grid item xs={12}>\n                <TextField\n                  required\n                  fullWidth\n                  name=\"password\"\n                  label=\"Password\"\n                  type=\"password\"\n                  id=\"password\"\n                  autoComplete=\"new-password\"\n                />\n              </Grid>\n              <Grid item xs={12}>\n                <FormControlLabel\n                  control={\n                    <Checkbox value=\"allowExtraEmails\" color=\"primary\" />\n                  }\n                  label=\"I want to receive inspiration, marketing promotions and updates via email.\"\n                />\n              </Grid>\n            </Grid>\n            <Button\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              sx={{ mt: 3, mb: 2 }}\n            >\n              Sign Up\n            </Button>\n            <Grid container justifyContent=\"flex-end\">\n              <Grid item>\n                <Link href=\"#\" variant=\"body2\">\n                  Already have an account? Sign in\n                </Link>\n              </Grid>\n            </Grid>\n          </Box>\n        </Box>\n        <Copyright sx={{ mt: 5 }} />\n      </Container>\n    </ThemeProvider>\n  );\n}\n"],"names":["Copyright","props","_jsxs","Typography","variant","color","align","children","_jsx","Link","href","Date","getFullYear","defaultTheme","createTheme","SignUp","dispatch","useDispatch","ThemeProvider","theme","Container","component","maxWidth","CssBaseline","Box","sx","marginTop","display","flexDirection","alignItems","Avatar","m","bgcolor","LockOutlinedIcon","noValidate","onSubmit","e","preventDefault","form","currentTarget","console","log","elements","name","value","email","password","register","reset","mt","Grid","container","spacing","item","xs","TextField","autoComplete","required","fullWidth","id","label","autoFocus","type","FormControlLabel","control","Checkbox","Button","mb","justifyContent"],"sourceRoot":""}